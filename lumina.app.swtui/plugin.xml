<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.2"?>
<plugin>
   <extension
         point="org.eclipse.ui.perspectives">
      <perspective
            class="lumina.ui.perspectives.AdminPerspective"
            id="lumina.perspectives.AdminPerspective"
            name="AdminPerspective">
      </perspective>
      <perspective
            class="lumina.ui.perspectives.OperatorPerspective"
            id="lumina.perspectives.OperatorPerspective"
            name="OperatorPerspective">
      </perspective>
      <perspective
            class="lumina.ui.perspectives.ExpressPerspective"
            id="lumina.perspectives.ExpressPerspective"
            name="ExpressPerspective">
      </perspective>
      <perspective
            class="lumina.ui.perspectives.MaxPlanPerspective"
            id="lumina.perspectives.MaxPlanPerspective"
            name="MaxPlanPerspective">
      </perspective>
      <perspective
            class="lumina.ui.perspectives.WelcomePerspective"
            id="lumina.perspectives.WelcomePerspective"
            name="MaxPlanPerspective">
      </perspective>
   </extension>
  
   <extension
         point="org.eclipse.ui.views">
     <view
            name="%lumina.view.blueprint"
            allowMultiple="true"
            icon="icons/model/floor.png"
            class="lumina.ui.views.blueprint.BlueprintView"
            id="lumina.views.blueprint">
      </view> 
      <view
            name="%lumina.view.navigation"
            allowMultiple="false"
            icon="icons/views/tree.png"
            class="lumina.ui.views.navigation.NavigationView"
            id="lumina.views.navigation">
      </view>
       <view
            name="%lumina.view.timers"
            allowMultiple="false"
            icon="icons/views/timers.png"
            class="lumina.ui.views.timer.TimerView"
            id="lumina.views.timer">
      </view>
      <view
            allowMultiple="false"
            class="lumina.ui.views.properties.PropertiesView"
            icon="icons/views/properties.png"
            id="lumina.views.properties"
            name="%lumina.view.properties"/>
      <view
            allowMultiple="false"
            class="lumina.ui.views.control.ControlView"
            icon="icons/views/switch.png"
            id="lumina.views.control"
            name="%lumina.view.controlview">
      </view> -->
   </extension>
   <extension
         point="org.eclipse.ui.commands">
      <category
            description="%lumina.command.applicationcommand.description"
            id="lumina.commands.categories.applicationCommands"
            name="%lumina.command.applicationcommand">
      </category>
      <category
            description="%lumina.command.projectcommand.description"
            id="lumina.commands.categories.projectCommands"
            name="%lumina.command.projectcommand">
      </category>
      <category
            description="%lumina.command.edit.description"
            id="lumina.commands.categories.edit"
            name="%lumina.command.edit">
      </category>
      <category
            description="%lumina.command.model.description"
            id="lumina.commands.categories.model"
            name="%lumina.command.model">
      </category>
      <category
            description="%lumina.command.communication.description"
            id="lumina.commands.categories.communication"
            name="%lumina.command.communication">
      </category>
      <category
            description="%lumina.command.blueprint.description"
            id="lumina.commands.categories.blueprint"
            name="%lumina.command.blueprint">
      </category>
      <category
            description="%lumina.command.view.description"
            id="lumina.commands.categories.view"
            name="%lumina.command.view">
      </category>
      <category
            description="%lumina.command.insert.description"
            id="lumina.commands.categories.insert"
            name="%lumina.command.insert">
      </category>
      <category
            description="%lumina.command.window.description"
            id="lumina.commands.categories.window"
            name="%lumina.command.window">
      </category>
      <category
            description="%lumina.command.help.description"
            id="lumina.commands.categories.help"
            name="%lumina.command.help">
      </category>
      <!--
      <category
            description="%lumina.command.reports.description"
            id="lumina.commands.categories.reports"
            name="%lumina.command.reports">
      </category>
      -->      
      <command
            categoryId="lumina.commands.categories.projectCommands"
            description="%lumina.menus.newProject.tooltip"
            helpContextId="lumina.commands.creation.newProject"
            id="lumina.commands.creation.newProject"
            name="%lumina.menus.newProject.label">
      </command>
      <command
            categoryId="lumina.commands.categories.projectCommands"
            description="%lumina.menus.openProject.tooltip"
            helpContextId="lumina.commands.open.openProject"
            id="lumina.commands.open.openProject"
            name="%lumina.menus.openProject.label">
      </command>
      <command
            categoryId="lumina.commands.categories.projectCommands"
            description="%lumina.menus.saveProject.tooltip"
            helpContextId="lumina.commands.save.saveProject"
            id="lumina.commands.save.saveProject"
            name="%lumina.menus.saveProject.label">
      </command>
      <command
            categoryId="lumina.commands.categories.projectCommands"
            description="%lumina.menus.saveProjectAs.tooltip"
            helpContextId="lumina.commands.save.saveProjectAs"
            id="lumina.commands.save.saveProjectAs"
            name="%lumina.menus.saveProjectAs.label">
      </command>
      <!--
      <command
            categoryId="lumina.commands.categories.reports"
            description="%lumina.menus.report.tooltip"
            helpContextId="lumina.commands.report"
            id="lumina.commands.reports.report"
            name="%lumina.menus.report.label">
      </command>
      -->
      <command
            description="%lumina.menus.undo.tooltip"
            helpContextId="org.eclipse.ui.edit.undo"
            id="org.eclipse.ui.edit.undo"
            name="%lumina.menus.undo.label">         
      </command>
      <command
            categoryId="lumina.commands.categories.edit"
            description="%lumina.menus.selectAll.tooltip"
            helpContextId="lumina.commands.edit.selectAll"
            id="lumina.commands.edit.selectAll"
            name="%lumina.menus.selectAll.label">
      </command>
      <command
            categoryId="lumina.commands.categories.edit"
            description="%lumina.menus.deselectAll.tooltip"
            helpContextId="lumina.commands.edit.deselectAll"
            id="lumina.commands.edit.deselectAll"
            name="%lumina.menus.deselectAll.label">
      </command>
      <command
            categoryId="lumina.commands.categories.model"
            description="%lumina.menus.newSchedule.tooltip"
            helpContextId="lumina.timers.commands.newSchedule"
            id="lumina.timers.commands.newSchedule"
            name="%lumina.menus.newSchedule.label">
      </command>
      <command
            categoryId="lumina.commands.categories.model"
            description="%lumina.menus.newTimer.tooltip"
            helpContextId="lumina.timers.commands.newTimer"
            id="lumina.timers.commands.newTimer"
            name="%lumina.menus.newTimer.label">
      </command>
      <command
            categoryId="lumina.commands.categories.model"
            description="%lumina.menus.newTask.tooltip"
            helpContextId="lumina.timers.commands.newTask"
            id="lumina.timers.commands.newTask"
            name="%lumina.menus.newTask.label">
      </command>
      <!--
      <command
            description="%lumina.menus.undo.tooltip"
            helpContextId="org.eclipse.ui.edit.undo"
            id="org.eclipse.ui.edit.undo"
            name="%lumina.menus.undo.label">
         <state
               class="org.eclipse.jface.menus.TextState"
               id="DESCRIPTION">
         </state>
         <state
               class="org.eclipse.jface.commands.ToggleState:true"
               id="STYLE">
         </state>
      </command>
      -->
      <command
            categoryId="lumina.commands.categories.view"
            description="%lumina.menus.zoomIn.tooltip"
            helpContextId="lumina.blueprint.commands.zoomIn"
            id="lumina.blueprint.commands.zoomIn"
            name="%lumina.menus.zoomIn.label">
      </command>
      <command
            categoryId="lumina.commands.categories.view"
            description="%lumina.menus.zoomOut.tooltip"
            helpContextId="lumina.blueprint.commands.zoomOut"
            id="lumina.blueprint.commands.zoomOut"
            name="%lumina.menus.zoomOut.label">
      </command>
      <command
            categoryId="lumina.commands.categories.view"
            description="%lumina.menus.zoomDefault.tooltip"
            helpContextId="lumina.blueprint.commands.zoomToDefault"
            id="lumina.blueprint.commands.zoomToDefault"
            name="%lumina.menus.zoomDefault.label">
      </command>
      <command
            categoryId="lumina.commands.categories.view"
            defaultHandler="lumina.ui.views.blueprint.actions.MaximizePlanActivityHandler"
            description="%lumina.menus.maximize.tooltip"
            helpContextId="lumina.blueprint.commands.maximize"
            id="lumina.blueprint.commands.maximize"
            name="%lumina.menus.maximize.label">
      </command>
       <command
            categoryId="lumina.commands.categories.view"
            description="%lumina.menus.showDeviceControl.tooltip"
            helpContextId="lumina.control.commands.showDeviceControl"
            id="lumina.control.commands.showDeviceControl"
            name="%lumina.menus.showDeviceControl.label">
      </command>
      <command
            categoryId="lumina.commands.categories.view"
            description="%lumina.menus.addBlueprint.tooltip"
            helpContextId="lumina.blueprint.commands.addToBlueprint"
            id="lumina.blueprint.commands.addToBlueprint"
            name="%lumina.menus.addBlueprint.label">
      </command>
      <command
            categoryId="lumina.commands.categories.view"
            description="%lumina.menus.removeBlueprint.tooltip"
            helpContextId="lumina.blueprint.commands.removeFromBlueprint"
            id="lumina.blueprint.commands.removeFromBlueprint"
            name="%lumina.menus.removeBlueprint.label">
      </command>
      <command
            categoryId="lumina.commands.categories.view"
            description="%lumina.menus.centerBlueprint.tooltip"
            helpContextId="lumina.blueprint.commands.centerInBlueprint"
            id="lumina.blueprint.commands.centerInBlueprint"
            name="%lumina.menus.centerBlueprint.label">
      </command>
      <command
            categoryId="lumina.commands.categories.edit"
            description="%lumina.menus.rename.tooltip"
            helpContextId="lumina.commands.properties.rename"
            id="lumina.commands.properties.rename"
            name="%lumina.menus.rename.label">
      </command>
      <command
            categoryId="lumina.commands.categories.model"
            description="%lumina.menus.newFloor.tooltip"
            helpContextId="lumina.commands.creation.newFloor"
            id="lumina.commands.creation.newFloor"
            name="%lumina.menus.newFloor.label">
      </command>
      <command
            categoryId="lumina.commands.categories.model"
            description="%lumina.menus.newArea.tooltip"
            helpContextId="lumina.commands.creation.newArea"
            id="lumina.commands.creation.newArea"
            name="%lumina.menus.newArea.label">
      </command>
      <command
            categoryId="lumina.commands.categories.model"
            description="%lumina.menus.newDevice.tooltip"
            helpContextId="lumina.commands.creation.newDevice"
            id="lumina.commands.creation.newDevice"
            name="%lumina.menus.newDevice.label">
         <commandParameter
               id="lumina.commands.creation.newDevice.deviceType"
               name="Device Type">
         </commandParameter>
      </command>
      <command
            categoryId="lumina.commands.categories.model"
            description="%lumina.menus.executeScan.tooltip"
            helpContextId="lumina.devices.commands.scanDevices"
            id="lumina.devices.commands.scanDevices"
            name="%lumina.menus.executeScan.label">
      </command>
      <command
            categoryId="lumina.commands.categories.model"
            description="%lumina.menus.executeTask.tooltip"
            helpContextId="lumina.timers.commands.executeTask"
            id="lumina.timers.commands.executeTask"
            name="%lumina.menus.executeTask.label">
      </command>
      <command
            categoryId="lumina.commands.categories.communication"
            description="%lumina.menus.configureInterfaces.tooltip"
            helpContextId="lumina.commands.properties.configureInterfaces"
            id="lumina.commands.properties.configureInterfaces"
            name="%lumina.menus.configureInterfaces.label">
      </command>
      <command
            categoryId="lumina.commands.categories.help"
            description="%lumina.menus.helpContents.tooltip"
            helpContextId="lumina.help.commands.help"
            id="lumina.help.commands.help"
            name="%lumina.menus.helpContents.label">
      </command>
      <command
            categoryId="lumina.commands.categories.help"
            description="%lumina.menus.supportLog.tooltip"
            helpContextId="lumina.help.commands.supportLog"
            id="lumina.help.commands.supportLog"
            name="%lumina.menus.supportLog.label">
      </command>
      <command
            categoryId="lumina.commands.categories.help"
            description="%lumina.menus.about.tooltip"
            helpContextId="lumina.help.commands.about"
            id="lumina.help.commands.about"
            name="%lumina.menus.about.label">
      </command> 
      
      <command
            defaultHandler="lumina.ui.views.ToggleInfoActivityHandler"
            description="%lumina.menus.toggleInfo.tooltip"
            helpContextId="lumina.views.commands.toggleInfo"
            id="lumina.views.commands.toggleInfo"
            name="%lumina.menus.toggleInfo.label">
      </command>
      
      <command
            defaultHandler="lumina.ui.views.properties.ToggleAlphaSortActivityHandler"
            description="%lumina.menus.toggleAlphaSort.tooltip"
            helpContextId="lumina.properties.commands.toggleAlphaSort"
            id="lumina.properties.commands.toggleAlphaSort"
            name="%lumina.menus.toggleAlphaSort.label">
      </command>
   </extension>
   <extension
         point="org.eclipse.ui.bindings">
      <scheme
            description="Lumina bindings"
            id="lumina.scheme"
            name="Lumina Bindings">
      </scheme>
      <key
            commandId="lumina.commands.properties.rename"
            schemeId="lumina.scheme"
            sequence="%lumina.sequence.rename">
      </key>
      <key
            commandId="lumina.commands.creation.newProject"
            schemeId="lumina.scheme"
            sequence="%lumina.sequence.newproject">
      </key>
      <key
            commandId="lumina.commands.open.openProject"
            schemeId="lumina.scheme"
            sequence="%lumina.sequence.openproject">
      </key>
      <key
            commandId="lumina.commands.save.saveProject"
            schemeId="lumina.scheme"
            sequence="%lumina.sequence.saveproject">
      </key>
      <key
            commandId="org.eclipse.ui.file.exit"
            schemeId="lumina.scheme"
            sequence="%lumina.sequence.exit">
      </key>
      <key
            commandId="lumina.blueprint.commands.zoomIn"
            schemeId="lumina.scheme"
            sequence="%lumina.sequence.zoomIn">
      </key>
      <key
            commandId="lumina.blueprint.commands.zoomOut"
            schemeId="lumina.scheme"
            sequence="%lumina.sequence.zoomOut">
      </key>
      <key
            commandId="lumina.blueprint.commands.zoomToDefault"
            schemeId="lumina.scheme"
            sequence="%lumina.sequence.zoomDefault">
      </key>
      <key
            commandId="org.eclipse.ui.edit.undo"
            schemeId="lumina.scheme"
            sequence="%lumina.sequence.undo">
      </key>
      <key
            commandId="org.eclipse.ui.edit.redo"
            schemeId="lumina.scheme"
            sequence="%lumina.sequence.redo">
      </key>
      <key
            commandId="org.eclipse.ui.edit.cut"
            schemeId="lumina.scheme"
            sequence="%lumina.sequence.cut">
      </key>
      <key
            commandId="org.eclipse.ui.edit.copy"
            schemeId="lumina.scheme"
            sequence="%lumina.sequence.copy">
      </key>
      <key
            commandId="org.eclipse.ui.edit.paste"
            schemeId="lumina.scheme"
            sequence="%lumina.sequence.paste">
      </key>
      <key
            commandId="org.eclipse.ui.edit.delete"
            schemeId="lumina.scheme"
            sequence="%lumina.sequence.delete">
      </key>
      <key
            commandId="lumina.commands.edit.selectAll"
            schemeId="lumina.scheme"
            sequence="%lumina.sequence.selectAll">
      </key>
      <key
            commandId="lumina.commands.edit.deselectAll"
            schemeId="lumina.scheme"
            sequence="%lumina.sequence.deselectAll">
      </key>
       <key
            commandId="lumina.control.commands.showDeviceControl"
            schemeId="lumina.scheme"
            sequence="%lumina.sequence.showDeviceControl">
      </key>
      <key
            commandId="lumina.blueprint.commands.centerInBlueprint"
            schemeId="lumina.scheme"
            sequence="%lumina.sequence.centerInBlueprint">
      </key>
      <key
            commandId="lumina.help.commands.help"
            schemeId="lumina.scheme"
            sequence="%lumina.sequence.helpContents">
      </key>
      <key
            commandId="lumina.help.commands.supportLog"
            schemeId="lumina.scheme"
            sequence="%lumina.sequence.supportLog">
      </key>
   </extension>

   <extension
         point="org.eclipse.ui.actionSets">
      <actionSet
            id="lumina.actionset.open"
            label="Open"
            visible="true">         
         <action
               class="lumina.ui.actions.OpenProjectActionDelegate"
               definitionId="lumina.commands.open.openProject"
               icon="icons/actions/open.png"
               id="lumina.actions.open.openproject"
               label="%lumina.menus.openProject.label"
               menubarPath="file/open_additions"
               style="push"
               tooltip="%lumina.menus.openProject.tooltip">
         </action>         
      </actionSet>
      <actionSet
            id="lumina.actionsets.save"
            label="Save"
            visible="true">
            <action
                  class="lumina.ui.actions.SaveProjectActionDelegate"
                  definitionId="lumina.commands.save.saveProject"
                  id="lumina.actions.save.saveproject"
                  label="%lumina.menus.saveProject.label"
                  menubarPath="file/save_additions"
                  style="push"
                  tooltip="%lumina.menus.saveProject.tooltip">
         </action>
         <action
               class="lumina.ui.actions.SaveProjectAsActionDelegate"
               definitionId="lumina.commands.save.saveProjectAs"
               id="lumina.actions.save.saveprojectas"
               label="%lumina.menus.saveProjectAs.label"
               menubarPath="file/save_additions"
               style="push"
               tooltip="%lumina.menus.saveProjectAs.tooltip">
         </action>
      </actionSet>
      <actionSet
            id="lumina.actionsets.properties"
            label="Properties"
            visible="true">
          <action
                definitionId="lumina.commands.properties.rename"
                enablesFor="1"
                id="lumina.actions.properties.rename"
                label="Rename"
                retarget="true"
                style="push">
         </action>
          <action
                class="lumina.ui.actions.ConfigureNetworkInterfacesActionDelegate"
                definitionId="lumina.commands.properties.configureInterfaces"
                id="lumina.actions.properties.configureInterfaces"
                label="%lumina.menus.configureInterfaces.label"
                tooltip="%lumina.menus.configureInterfaces.tooltip">
          </action>
      </actionSet>
      <actionSet
            id="lumina.actionsets.edit"
            label="Edit"
            visible="true">
         <action
               definitionId="lumina.commands.edit.deselectAll"
               enablesFor="*"
               id="lumina.actions.edit.deselectAll"
               label="Deselect all"
               menubarPath="edit/selection_additions"
               retarget="true"
               style="push">
         </action>
         <action
               definitionId="lumina.commands.edit.selectAll"
               enablesFor="*"
               id="lumina.actions.edit.selectAll"
               label="Select all"
               menubarPath="edit/selection_additions"
               retarget="true"
               style="push">
         </action>
         <action
               allowLabelUpdate="true"
               definitionId="org.eclipse.ui.edit.undo2"
               id="undo"
               label="Undo2"
               retarget="true">
         </action>
      </actionSet>
      <actionSet
            id="lumina.actionsets.help"
            label="Help"
            visible="true">
         <action
               class="lumina.ui.actions.HelpActionHandler"
               definitionId="lumina.help.commands.help"
               id="lumina.help.commands.help"
               label="%lumina.menus.helpContents.label"
               tooltip="%lumina.menus.helpContents.tooltip">
         </action>
         <action
               class="lumina.ui.actions.GenerateSupportLogActionDelegate"
               definitionId="lumina.help.commands.supportLog"
               id="lumina.actions.help.supportLog"
               label="%lumina.menus.supportLog.label"
               tooltip="%lumina.menus.supportLog.tooltip">
         </action>
         <action
               class="lumina.ui.actions.ShowAboutDialogActionDelegate"
               definitionId="lumina.help.commands.about"
               id="lumina.actions.help.about"
               label="%lumina.menus.about.label"
               tooltip="%lumina.menus.about.tooltip">
         </action>
         <action
               class="lumina.ui.actions.OpenWelcomeActionDelegate"
               definitionId="lumina.help.commands.welcome"
               id="lumina.actions.help.welcome"
               label="%lumina.menus.intro.label"
               tooltip="%lumina.menus.intro.tooltip">
         </action>
      </actionSet>
      <actionSet
            id="lumina.actionset.execute"
            label="Execute"
            visible="true">
      </actionSet>
      <!-- <actionSet
            id="lumina.actionset.report"
            label="Report"
            visible="true">
         <action
               class="lumina.ui.actions.ReportsActionDelegate"
               definitionId="lumina.commands.reports.report"
               id="lumina.action.report.report"
               label="%lumina.menus.report.label"
               tooltip="%lumina.menus.report.tooltip">
         </action>
      </actionSet>
      -->
   </extension>
   <extension
         point="org.eclipse.ui.menus">
<menuContribution
      locationURI="menu:org.eclipse.ui.main.menu?after=additions">      
<menu
      id="lumina.menus.file"
      label="%lumina.menus.file.label"
      mnemonic="%lumina.menus.file.mnemonic"
      tooltip="%lumina.menus.file.tooltip">
  <command
        commandId="lumina.commands.creation.newProject"
        helpContextId="lumina.commands.creation.newProject"
        id="lumina.menus.newProject"
        label="%lumina.menus.newProject.label"
        mnemonic="%lumina.menus.newProject.mnemonic"
        tooltip="%lumina.menus.newProject.tooltip">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="PROJECT_NEW">
        </test>
     </visibleWhen>
  </command>
  <separator
        name="lumina.menus.s1"
        visible="true"></separator>
  <command
        commandId="lumina.commands.open.openProject"
        helpContextId="lumina.commands.open.openProject"
        id="lumina.menus.openProject"
        label="%lumina.menus.openProject.label"
        mnemonic="%lumina.menus.openProject.mnemonic"
        tooltip="%lumina.menus.openProject.tooltip">
  </command>
   <command
          commandId="lumina.commands.save.saveProject"
          helpContextId="lumina.commands.save.saveProject"
          id="lumina.menus.saveProject"
          label="%lumina.menus.saveProject.label"
          mnemonic="%lumina.menus.saveProject.mnemonic"
          tooltip="%lumina.menus.saveProject.tooltip">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="PROJECT_SAVE">
        </test>
     </visibleWhen>
   </command>
   <command
         commandId="lumina.commands.save.saveProjectAs"
         helpContextId="lumina.commands.save.saveProjectAs"
         id="lumina.menus.saveProjectAs"
         label="%lumina.menus.saveProjectAs.label"
         mnemonic="%lumina.menus.saveProjectAs.mnemonic"
         tooltip="%lumina.menus.saveProjectAs.tooltip">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="PROJECT_SAVE">
        </test>
     </visibleWhen>
  </command>
  
  <separator
        name="lumina.menus.s3"
        visible="true">
  </separator>

  <!-- <command
        commandId="lumina.commands.reports.report"
        helpContextId="lumina.commands.report"
        id="lumina.menus.report"
        label="%lumina.menus.report.label"
        mnemonic="%lumina.menus.report.mnemonic"
        tooltip="%lumina.menus.report.tooltip">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="REPORT_GENERATION">
        </test>
     </visibleWhen>
  </command>
-->
  <separator
        name="lumina.menus.s4"
        visible="true">
  </separator>

  <command
        commandId="org.eclipse.ui.file.exit"
        helpContextId="org.eclipse.ui.file.exit"
        icon="icons/actions/exit.png"
        id="lumina.menus.exit"
        label="%lumina.menus.exit.label"
        mnemonic="%lumina.menus.exit.mnemonic"
        tooltip="%lumina.menus.exit.tooltip">
  </command>
</menu>

<menu
      id="lumina.menus.edit"
      label="%lumina.menus.edit.label"
      mnemonic="%lumina.menus.edit.mnemonic"
      tooltip="%lumina.menus.edit.tooltip">
  <command
        commandId="org.eclipse.ui.edit.undo"
        helpContextId="org.eclipse.ui.edit.undo"
        id="lumina.menus.undo"
        label="%lumina.menus.undo.label"
        mnemonic="%lumina.menus.undo.mnemonic"
        tooltip="%lumina.menus.undo.tooltip">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="UNDO_REDO">
        </test>
     </visibleWhen>
  </command>
  <command
        commandId="org.eclipse.ui.edit.redo"
        helpContextId="org.eclipse.ui.edit.redo"
        id="lumina.menus.redo"
        label="%lumina.menus.redo.label"
        mnemonic="%lumina.menus.redo.mnemonic"
        tooltip="%lumina.menus.redo.tooltip">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="UNDO_REDO">
        </test>
     </visibleWhen>
  </command>
  <separator
        name="lumina.menus.edit.s1"
        visible="true">
  </separator>
  <command
        commandId="org.eclipse.ui.edit.cut"
        helpContextId="org.eclipse.ui.edit.cut"
        id="lumina.menus.cut"
        label="%lumina.menus.cut.label"
        mnemonic="%lumina.menus.cut.mnemonic"
        tooltip="%lumina.menus.cut.tooltip">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="CLIPBOARD">
        </test>
     </visibleWhen>
  </command>
  <command
        commandId="org.eclipse.ui.edit.copy"
        helpContextId="org.eclipse.ui.edit.copy"
        id="lumina.menus.copy"
        label="%lumina.menus.copy.label"
        mnemonic="%lumina.menus.copy.mnemonic"
        tooltip="%lumina.menus.copy.tooltip">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="CLIPBOARD">
        </test>
     </visibleWhen>
  </command>
  <command
        commandId="org.eclipse.ui.edit.paste"
        helpContextId="org.eclipse.ui.edit.paste"
        id="lumina.menus.paste"
        label="%lumina.menus.paste.label"
        mnemonic="%lumina.menus.paste.mnemonic"
        tooltip="%lumina.menus.paste.tooltip">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="CLIPBOARD">
        </test>
     </visibleWhen>
  </command>
  <command
        commandId="org.eclipse.ui.edit.delete"
        helpContextId="org.eclipse.ui.edit.delete"
        id="lumina.menus.delete"
        label="%lumina.menus.delete.label"
        mnemonic="%lumina.menus.delete.mnemonic"
        tooltip="%lumina.menus.delete.tooltip">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="CLIPBOARD">
        </test>
     </visibleWhen>
  </command>
  <separator
        name="lumina.menus.edit.s2"
        visible="true">
  </separator>
  <command
        commandId="lumina.commands.edit.selectAll"
        helpContextId="lumina.commands.edit.selectAll"
        id="lumina.menus.selectAll"
        label="%lumina.menus.selectAll.label"
        mnemonic="%lumina.menus.selectAll.mnemonic"
        tooltip="%lumina.menus.selectAll.tooltip">
  </command>
  <command
        commandId="lumina.commands.edit.deselectAll"
        helpContextId="lumina.commands.edit.deselectAll"
        id="lumina.menus.deselectAll"
        label="%lumina.menus.deselectAll.label"
        mnemonic="%lumina.menus.deselectAll.mnemonic"
        tooltip="%lumina.menus.deselectAll.tooltip">
  </command>
  <separator
        name="lumina.menus.edit.s3"
        visible="true">
  </separator>
  <command
        commandId="lumina.commands.properties.rename"
        helpContextId="lumina.commands.properties.rename"
        id="lumina.menus.rename"
        label="%lumina.menus.rename.label"
        mnemonic="%lumina.menus.rename.mnemonic"
        tooltip="%lumina.menus.rename.tooltip">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="ITEM_EDIT_NAME">
        </test>
     </visibleWhen>
  </command>
</menu>
<menu
      id="lumina.menus.view"
      label="%lumina.menus.view.label"
      mnemonic="%lumina.menus.view.mnemonic"
      tooltip="%lumina.menus.view.tooltip">
   <command
         commandId="lumina.blueprint.commands.zoomIn"
         helpContextId="lumina.blueprint.commands.zoomIn"
         id="lumina.menus.zoomIn"
         label="%lumina.menus.zoomIn.label"
         mnemonic="%lumina.menus.zoomIn.mnemonic"
         tooltip="%lumina.menus.zoomIn.tooltip">
   </command>
   <command
         commandId="lumina.blueprint.commands.zoomOut"
         helpContextId="lumina.blueprint.commands.zoomOut"
         id="lumina.menus.zoomOut"
         label="%lumina.menus.zoomOut.label"
         mnemonic="%lumina.menus.zoomOut.mnemonic"
         tooltip="%lumina.menus.zoomOut.tooltip">
   </command>
   <command
         commandId="lumina.blueprint.commands.zoomToDefault"
         helpContextId="lumina.blueprint.commands.zoomToDefault"
         id="lumina.menus.zoomToDefault"
         label="%lumina.menus.zoomDefault.label"
         mnemonic="%lumina.menus.zoomDefault.mnemonic"
         tooltip="%lumina.menus.zoomDefault.tooltip">
   </command>
   <separator
         name="lumina.separator1"
         visible="true">
   </separator>
   <command
        commandId="lumina.blueprint.commands.maximize"
        helpContextId="lumina.blueprint.commands.maximize"
        id="lumina.menus.maximize"
        label="%lumina.menus.maximize.label"
        mnemonic="%lumina.menus.maximize.mnemonic"
        style="toggle"
        tooltip="%lumina.menus.maximize.tooltip">
     
   </command>
   <command
         commandId="lumina.views.commands.toggleInfo"
         id="lumina.menus.toggleInfo"
         label="%lumina.menus.toggleInfo.label"
         mnemonic="%lumina.menus.toggleInfo.mnemonic"
         style="toggle"
         tooltip="%lumina.menus.toggleInfo.tooltip">
   </command>
   <command
         commandId="lumina.properties.commands.toggleAlphaSort"
         id="lumina.menus.toggleAlphaSort"
         label="%lumina.menus.toggleAlphaSort.label"
         mnemonic="%lumina.menus.toggleAlphaSort.mnemonic"
         style="toggle"
         tooltip="%lumina.menus.toggleAlphaSort.tooltip">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="ITEM_VIEW_PROPERTIES">
        </test>
     </visibleWhen>
   </command>
    <command
         commandId="lumina.control.commands.showDeviceControl"
         helpContextId="lumina.control.commands.showDeviceControl"
         id="lumina.menus.showDeviceControl"
         label="%lumina.menus.showDeviceControl.label"
         mnemonic="%lumina.menus.showDeviceControl.mnemonic"
         tooltip="%lumina.menus.showDeviceControl.tooltip">
      </command>
   <separator
         name="lumina.separator2"
         visible="true">
   </separator>
   <command
         commandId="lumina.blueprint.commands.addToBlueprint"
         helpContextId="lumina.blueprint.commands.addToBlueprint"
         id="lumina.menus.addToBlueprint"
         label="%lumina.menus.addBlueprint.label"
         mnemonic="%lumina.menus.addBlueprint.mnemonic"
         tooltip="%lumina.menus.addBlueprint.tooltip">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="DEVICE_EDIT_PROPERTIES">
        </test>
     </visibleWhen>
   </command>
   <command
         commandId="lumina.blueprint.commands.removeFromBlueprint"
         helpContextId="lumina.blueprint.commands.removeFromBlueprint"
         id="lumina.menus.removeFromBlueprint"
         label="%lumina.menus.removeBlueprint.label"
         mnemonic="%lumina.menus.removeBlueprint.menmonic"
         tooltip="%lumina.menus.removeBlueprint.tooltip">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="DEVICE_EDIT_PROPERTIES">
        </test>
     </visibleWhen>
   </command>
   <command
         commandId="lumina.blueprint.commands.centerInBlueprint"
         helpContextId="lumina.blueprint.commands.centerInBlueprint"
         id="lumina.menus.centerInBlueprint"
         label="%lumina.menus.centerBlueprint.label"
         mnemonic="%lumina.menus.centerBlueprint.mnemonic"
         tooltip="%lumina.menus.centerBlueprint.tooltip">
   </command>
  
  <!-- <command
         commandId="lumina.commands.swtichToUserMode"
         id="lumina.menus.view.switchToUserMode">
   </command> -->
</menu>

<menu
      id="lumina.menus.insert"
      label="%lumina.menus.insert.label"
      mnemonic="%lumina.menus.insert.mnemonic"
      tooltip="%lumina.menus.insert.mnemonic">
   <menu
         id="lumina.menus.command"
         label="My command"
         mnemonic="%lumina.menus.newDevice.mnemonic"
         tooltip="%lumina.menus.newDevice.tooltip">
      <visibleWhen>
         <test
               property="lumina.propertytesters.capability"
               value="DEVICE_EDIT_TREE">
         </test>
      </visibleWhen>
   </menu>
   <menu
         id="lumina.menus.newDevice"
         label="%lumina.menus.newDevice.label"
         mnemonic="%lumina.menus.newDevice.mnemonic"
         tooltip="%lumina.menus.newDevice.tooltip">
      <visibleWhen>
         <test
               property="lumina.propertytesters.capability"
               value="DEVICE_EDIT_TREE">
         </test>
      </visibleWhen>
   </menu>
   <command
         commandId="lumina.commands.creation.newFloor"
         id="lumina.menus.newFloor"
         label="%lumina.menus.newFloor.label"
         mnemonic="%lumina.menus.newFloor.mnemonic"
         tooltip="%lumina.menus.newFloor.tooltip">
      <visibleWhen>
         <test
               property="lumina.propertytesters.capability"
               value="DEVICE_EDIT_TREE">
         </test>
      </visibleWhen>
   </command>
   <command
         commandId="lumina.commands.creation.newArea"
         helpContextId="lumina.commands.creation.newArea"
         id="lumina.menus.newArea"
         label="%lumina.menus.newArea.label"
         mnemonic="%lumina.menus.newArea.mnemonic"
         tooltip="%lumina.menus.newArea.tooltip">
       <visibleWhen>
         <test
               property="lumina.propertytesters.capability"
               value="DEVICE_EDIT_TREE">
         </test>
      </visibleWhen>
   </command>
   <separator
         name="modelCreation"
         visible="true">
   </separator>
   <command
         commandId="lumina.timers.commands.newTimer"
         label="%lumina.menus.newTimer.label"
         mnemonic="%lumina.menus.newTimer.mnemonic"
         tooltip="%lumina.menus.newTimer.tooltip">
      <visibleWhen>
         <test
               property="lumina.propertytesters.capability"
               value="TIMER_EDIT_TREE">
         </test>
      </visibleWhen>
   </command>
   <command
         commandId="lumina.timers.commands.newSchedule"
         label="%lumina.menus.newSchedule.label"
         mnemonic="%lumina.menus.newSchedule.mnemonic"
         tooltip="%lumina.menus.newSchedule.tooltip">
      <visibleWhen>
         <test
               property="lumina.propertytesters.capability"
               value="TIMER_EDIT_TREE">
         </test>
      </visibleWhen>
   </command>
   <command
         commandId="lumina.timers.commands.newTask"
         label="%lumina.menus.newTask.label"
         mnemonic="%lumina.menus.newTask.mnemonic"
         tooltip="%lumina.menus.newTask.tooltip">
      <visibleWhen>
         <test
               property="lumina.propertytesters.capability"
               value="TIMER_EDIT_TREE">
         </test>
      </visibleWhen>
   </command>
   <visibleWhen>
      <or>
         <test
               property="lumina.propertytesters.capability"
               value="DEVICE_EDIT_TREE">
         </test>
         <test
               property="lumina.propertytesters.capability"
               value="TIMER_EDIT_TREE">
         </test>
      </or>
   </visibleWhen>
</menu>
<menu
      id="lumina.menus.network"
      label="%lumina.menus.network.label"
      mnemonic="%lumina.menus.network.mnemonic"
      tooltip="%lumina.menus.network.tooltip">
   <command
         commandId="lumina.devices.commands.scanDevices"
         label="%lumina.menus.executeScan.label"
         mnemonic="%lumina.menus.executeScan.mnemonic"
         tooltip="%lumina.menus.executeScan.tooltip">
   </command>
      <!--
               <menu
        id="lumina.menus.command2"
        label="Command"
        mnemonic="%lumina.menus.newDevice.mnemonic"
        tooltip="%lumina.menus.newDevice.tooltip">
        </menu>
        -->
        
         <command
         commandId="lumina.timers.commands.executeTask"
         label="%lumina.menus.executeTask.label"
         mnemonic="%lumina.menus.executeTask.mnemonic"
         tooltip="%lumina.menus.executeTask.tooltip">
   </command>
    <separator
         name="connections"
         visible="true"></separator>
    <separator
         name="s2"
         visible="true"></separator>
  <command
        commandId="lumina.commands.properties.configureInterfaces"
        helpContextId="lumina.commands.properties.configureInterfaces"
        id="lumina.menus.configureInterfaces"
        label="%lumina.menus.configureInterfaces.label"
        mnemonic="%lumina.menus.configureInterfaces.mnemonic"
        tooltip="%lumina.menus.configureInterfaces.tooltip">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="NETWORK_EDIT">
        </test>
     </visibleWhen>
  </command>
</menu>
<menu
      id="lumina.menus.help"
      label="%lumina.menus.help.label"
      mnemonic="%lumina.menus.help.mnemonic"
      tooltip="%lumina.menus.label.mnemonic">
   <!-- command
         commandId="org.eclipse.ui.help.helpContents"
         helpContextId="org.eclipse.ui.help.helpContents"
         id="lumina.menus.helpContents"
         label="%lumina.menus.helpContents.label"
         mnemonic="%lumina.menus.helpContents.mnemonic"
         tooltip="%lumina.menus.helpContents.tooltip">
   </command-->
   <command
         commandId="lumina.help.commands.help"
         label="%lumina.menus.helpContents.label"
         mnemonic="%lumina.menus.helpContents.mnemonic"
         tooltip="%lumina.menus.helpContents.tooltip">
   </command>
   <command
         commandId="lumina.help.commands.welcome"
         id="lumina.menus.intro"
         label="%lumina.menus.intro.label"
         mnemonic="%lumina.menus.intro.mnemonic"
         tooltip="%lumina.menus.intro.tooltip">
   </command>
   <separator
         name="lumina.menus.help.s1"
         visible="true">
   </separator>
   <command
         commandId="lumina.help.commands.supportLog"
         id="lumina.menus.supportLog"
         label="%lumina.menus.supportLog.label"
         mnemonic="%lumina.menus.supportLog.mnemonic"
         tooltip="%lumina.menus.supportLog.tooltip">
   </command>
   <separator
         name="lumina.menus.help.s2"
         visible="true">
   </separator>
   <command
         commandId="lumina.help.commands.about"
         id="lumina.menus.about"
         label="%lumina.menus.about.label"
         mnemonic="%lumina.menus.about.mnemonic"
         tooltip="%lumina.menus.about.tooltip">
   </command>
</menu>
</menuContribution>
<menuContribution
  locationURI="menu:lumina.menus.newDevice">      
   <command
         commandId="lumina.commands.creation.newDevice"
         icon="icons/actions/fluorescent_new.png"
         id="lumina.menus.newDevice.fluorescentLamp"
         label="%lumina.menus.newFluorescentLamp.label"
         mnemonic="%lumina.menus.newFluorescentLamp.mnemonic"
         style="push"
         tooltip="%lumina.menus.newFluorescentLamp.tooltip">  
          <parameter
            name="lumina.commands.creation.newDevice.deviceType"
            value="lumina.base.model.devices.FluorescentLampDevice">
      </parameter>          
     </command>
   <command
         commandId="lumina.commands.creation.newDevice"
         icon="icons/actions/incandescent_new.png"
         id="lumina.menus.newDevice.incandescentLamp"
         label="%lumina.menus.newIncandescentLamp.label"
         mnemonic="%lumina.menus.newIncandescentLamp.mnemonic"
         tooltip="%lumina.menus.newIncandescentLamp.tooltip">
      <parameter
            name="lumina.commands.creation.newDevice.deviceType"
            value="lumina.base.model.devices.IncandescentLampDevice">
      </parameter>      
     </command>
     <command
           commandId="lumina.commands.creation.newDevice"
           icon="icons/actions/control_panel_new.png"
           id="lumina.menus.newDevice.controlPanel"
           label="%lumina.menus.newControlPanel.label"
           mnemonic="%lumina.menus.newControlPanel.mnemonic"
           tooltip="%lumina.menus.newControlPanel.tooltip">
           <parameter
            name="lumina.commands.creation.newDevice.deviceType"
            value="lumina.base.model.devices.ControlPanelDevice">
      </parameter>  
     </command>
      <command
            commandId="lumina.commands.creation.newDevice"
            icon="icons/actions/shutter_new.png"
            id="lumina.menus.newDevice.shutter"
            label="%lumina.menus.newShutter.label"
            mnemonic="%lumina.menus.newShutter.mnemonic"
            style="push"
            tooltip="%lumina.menus.newShutter.tooltip">  
          <parameter
            name="lumina.commands.creation.newDevice.deviceType"
            value="lumina.base.model.devices.BlindDevice">
      </parameter>          
     </command>
      <command
            commandId="lumina.commands.creation.newDevice"
            icon="icons/actions/courtain_new.png"
            id="lumina.menus.newDevice.courtains"
            label="%lumina.menus.newCourtains.label"
            mnemonic="%lumina.menus.newCourtains.mnemonic"
            style="push"
            tooltip="%lumina.menus.newCourtains.tooltip">  
          <parameter
            name="lumina.commands.creation.newDevice.deviceType"
            value="lumina.base.model.devices.CourtainsDevice">
       </parameter>          
      </command>
      <command
            commandId="lumina.commands.creation.newDevice"
            icon="icons/model/timer.png"
            id="lumina.menus.newDevice.meter"
            label="%lumina.menus.newGateway.label"
            mnemonic="%lumina.menus.newGateway.mnemonic"
            style="push"
            tooltip="%lumina.menus.newGateway.tooltip">  
          <parameter
            name="lumina.commands.creation.newDevice.deviceType"
            value="lumina.base.model.devices.GatewayDevice">
       	  </parameter>          
      </command>
</menuContribution>
<menuContribution
      locationURI="popup:lumina.views.navigation.contextMenu">
  <menu
        icon="icons/actions/device_new.png"
        id="lumina.menus.newDevice"
        label="%lumina.menus.newDevice.label"
        mnemonic="%lumina.menus.newDevice.mnemonic"
        tooltip="%lumina.menus.newDevice.tooltip">
    <command
         commandId="lumina.commands.creation.newDevice"
         icon="icons/actions/fluorescent_new.png"
         id="lumina.menus.newDevice.fluorescentLamp"
         label="%lumina.menus.newFluorescentLamp.label"
         mnemonic="%lumina.menus.newFluorescentLamp.mnemonic"
         style="push"
         tooltip="%lumina.menus.newFluorescentLamp.tooltip">  
          <parameter
            name="lumina.commands.creation.newDevice.deviceType"
            value="lumina.model.devices.FluorescentLampDevice">
      </parameter>          
    </command>
    <command
         commandId="lumina.commands.creation.newDevice"
         icon="icons/actions/incandescent_new.png"
         id="lumina.menus.newDevice.incandescentLamp"
         label="%lumina.menus.newIncandescentLamp.label"
         mnemonic="%lumina.menus.newIncandescentLamp.mnemonic"
         tooltip="%lumina.menus.newIncandescentLamp.tooltip">
      <parameter
            name="lumina.commands.creation.newDevice.deviceType"
            value="lumina.model.devices.IncandescentLampDevice">
      </parameter>      
     </command>
     <command
           commandId="lumina.commands.creation.newDevice"
           icon="icons/actions/control_panel_new.png"
           id="lumina.menus.newDevice.controlPanel"
           label="%lumina.menus.newControlPanel.label"
           mnemonic="%lumina.menus.newControlPanel.mnemonic"
           tooltip="%lumina.menus.newControlPanel.tooltip">
           <parameter
            name="lumina.commands.creation.newDevice.deviceType"
            value="lumina.model.devices.ControlPanelDevice">
      </parameter>  
     </command>
     <command
            commandId="lumina.commands.creation.newDevice"
            icon="icons/actions/shutter_new.png"
            id="lumina.menus.newDevice.shutter"
            label="%lumina.menus.shutter.label"
            mnemonic="%lumina.menus.shutter.mnemonic"
            style="push"
            tooltip="%lumina.menus.shutter.tooltip">  
          <parameter
            name="lumina.commands.creation.newDevice.deviceType"
            value="lumina.model.devices.BlindDevice">
      </parameter>  
      </command>~
      <command
            commandId="lumina.commands.creation.newDevice"
            icon="icons/actions/courtain_new.png"
            id="lumina.menus.newDevice.courtains"
            label="%lumina.menus.courtains.label"
            mnemonic="%lumina.menus.courtains.mnemonic"
            style="push"
            tooltip="%lumina.menus.courtains.tooltip">  
          <parameter
            name="lumina.commands.creation.newDevice.deviceType"
            value="lumina.model.devices.CourtainsDevice">
       </parameter>          
      </command>
      <visibleWhen>
         <and>
            <test
                  property="lumina.propertytesters.capability"
                  value="DEVICE_EDIT_TREE">
            </test>
            <with
                  variable="selection">
               <iterate
                     ifEmpty="false"
                     operator="and">
                  <or>
                     <instanceof
                           value="lumina.base.model.Area">
                     </instanceof>
                     <instanceof
                           value="lumina.base.model.Device">
                     </instanceof>
                  </or>
               </iterate>
               <count
                     value="1">
               </count>
            </with>
         </and>
      </visibleWhen>
  </menu>
   <command
         commandId="lumina.commands.creation.newFloor"
         id="lumina.navigation.menus.popup.newFloor">
      <visibleWhen>
         <and>
            <test
                  property="lumina.propertytesters.capability"
                  value="DEVICE_EDIT_TREE">
            </test>
            <with
                  variable="selection">
               <iterate
                     ifEmpty="false"
                     operator="and">
                  <or>
                     <instanceof
                           value="lumina.base.model.Floor">
                     </instanceof>
                     <instanceof
                           value="lumina.base.model.Project">
                     </instanceof>
                  </or>
               </iterate>
               <count
                     value="1">
               </count>
            </with>
         </and>
      </visibleWhen>
   </command>
   <command
         commandId="lumina.commands.creation.newArea"
         id="lumina.navigation.menus.popup.newArea">
      <visibleWhen>
         <and>
            <test
                  property="lumina.propertytesters.capability"
                  value="DEVICE_EDIT_TREE">
            </test>
            <with
                  variable="selection">
               <iterate
                     ifEmpty="false"
                     operator="and">
                  <or>
                     <instanceof
                           value="lumina.base.model.Area">
                     </instanceof>
                     <instanceof
                           value="lumina.base.model.Floor">
                     </instanceof>
                  </or>
               </iterate>
               <count
                     value="1">
               </count>
            </with>
         </and>
      </visibleWhen>
   </command>
   <separator
         name="s1"
         visible="true">
   </separator>
   <command
          commandId="org.eclipse.ui.edit.cut"
          id="lumina.navigation.menus.popup.cut"
          label="%lumina.menus.cut.label"
          mnemonic="%lumina.menus.cut.mnemonic"
          tooltip="%lumina.menus.cut.tooltip">
      <visibleWhen>
         <test
               property="lumina.propertytesters.capability"
               value="CLIPBOARD">
         </test>
      </visibleWhen>
   </command>
   <command
        commandId="org.eclipse.ui.edit.copy"
        id="lumina.navigation.menus.popup.copy"
        label="%lumina.menus.copy.label"
        mnemonic="%lumina.menus.copy.mnemonic"
        tooltip="%lumina.menus.copy.tooltip">
      <visibleWhen>
         <test
               property="lumina.propertytesters.capability"
               value="CLIPBOARD">
         </test>
      </visibleWhen>
   </command>
   <command
        commandId="org.eclipse.ui.edit.paste"
        id="lumina.navigation.menus.popup.paste"
        label="%lumina.menus.paste.label"
        mnemonic="%lumina.menus.paste.mnemonic"
        tooltip="%lumina.menus.paste.label">
      <visibleWhen>
         <test
               property="lumina.propertytesters.capability"
               value="CLIPBOARD">
         </test>
      </visibleWhen>
   </command>
   <command
        commandId="org.eclipse.ui.edit.delete"
        id="lumina.navigation.menus.popup.delete"
        label="%lumina.menus.delete.label"
        mnemonic="%lumina.menus.delete.mnemonic"
        tooltip="%lumina.menus.delete.tooltip">
      <visibleWhen>
         <test
               property="lumina.propertytesters.capability"
               value="CLIPBOARD">
         </test>
      </visibleWhen>
   </command>
   <separator
         name="s2"
         visible="true">
   </separator>
   <command
        commandId="lumina.commands.properties.rename"
        id="lumina.navigation.menus.popup.rename"
        label="%lumina.menus.rename.label"
        mnemonic="%lumina.menus.rename.mnemonic"
        tooltip="%lumina.menus.rename.tooltip">
      <visibleWhen>
         <test
               property="lumina.propertytesters.capability"
               value="ITEM_EDIT_NAME">
         </test>
      </visibleWhen>
   </command>
   <separator
         name="s3"
         visible="true">
   </separator>
    <command        
           commandId="lumina.control.commands.showDeviceControl"
           id="lumina.control.menus.popup.showDeviceControl"
           label="%lumina.menus.showDeviceControl.label"
           mnemonic="%lumina.menus.showDeviceControl.mnemonic"
           tooltip="%lumina.menus.showDeviceControl.tooltip">
      <visibleWhen
            checkEnabled="false">
         <with
               variable="selection">
            <iterate
                  ifEmpty="false"
                  operator="and">
                  <instanceof
                        value="lumina.base.model.Device">
                  </instanceof>
            </iterate>            
         </with>
      </visibleWhen>
   </command>
   <separator
         name="s4"
         visible="true">
   </separator>
   <command
          commandId="lumina.blueprint.commands.addToBlueprint"
          helpContextId="lumina.commands.blueprint.addToBlueprint"
          id="lumina.navigation.menus.popup.addToBlueprint"
          label="%lumina.menus.addBlueprint.label"
          mnemonic="%lumina.menus.addBlueprint.mnemonic"
          tooltip="%lumina.menus.addBlueprint.tooltip">
      <visibleWhen>
         <and>
            <test
                  property="lumina.propertytesters.capability"
                  value="DEVICE_EDIT_PROPERTIES">
            </test>
            <with
                  variable="selection">
               <iterate
                     ifEmpty="false"
                     operator="and">
                  <instanceof
                        value="lumina.base.model.Device">
                  </instanceof>               
               </iterate>            
            </with>
         </and>
      </visibleWhen>
   </command> 
   <command
            commandId="lumina.blueprint.commands.removeFromBlueprint"
            id="lumina.navigation.menus.popup.removeFromBlueprint"
            label="%lumina.menus.removeBlueprint.label"
            mnemonic="%lumina.menus.removeBlueprint.mnemonic"
            tooltip="%lumina.menus.removeBlueprint.tooltip">
      <visibleWhen>
         <and>
            <test
                  property="lumina.propertytesters.capability"
                  value="DEVICE_EDIT_PROPERTIES">
            </test>
            <with
                  variable="selection">
               <iterate
                     ifEmpty="false"
                     operator="and">
                  <instanceof
                        value="lumina.base.model.Device">
                  </instanceof>		        
               </iterate>            
            </with>
         </and>
      </visibleWhen>
   </command>
   
   <command        
            commandId="lumina.blueprint.commands.centerInBlueprint"
            id="lumina.navigation.menus.popup.rcenterInBlueprint"
            label="%lumina.menus.centerBlueprint.label"
            mnemonic="%lumina.menus.centerBlueprint.mnemonic"
            tooltip="%lumina.menus.centerBlueprint.tooltip">
      <visibleWhen
            checkEnabled="false">
         <with
               variable="selection">
            <iterate
                  ifEmpty="false"
                  operator="and">
                  <or>
                  <instanceof
                        value="lumina.base.model.Area">
                  </instanceof>
                  <instanceof
                        value="lumina.base.model.Device">
                  </instanceof>
                  </or>
            </iterate>            
         </with>
      </visibleWhen>
   </command>
   <separator
         name="s4"
         visible="true">
   </separator>
   <menu
        id="lumina.menus.command"
        label="Command">
        <visibleWhen>
         <and>            
            <with
                  variable="selection">
               <iterate
                     ifEmpty="false"
                     operator="and">
                  <or>                     
                     <instanceof
                           value="lumina.base.model.Device">
                     </instanceof>
                  </or>
               </iterate>
               <count
                     value="1">
               </count>
            </with>
         </and>
      </visibleWhen>
  </menu>  
</menuContribution>
<menuContribution
      locationURI="popup:lumina.menus.command">
      <!-- Contribution where the command menu is hooked by the navigation view 
           when in admin mode. 
           DO NOT DELETE. TAR SOSSEGADINHO. -->           
</menuContribution>

<menuContribution
      locationURI="popup:lumina.views.timers.contextMenu">
   <command
         commandId="lumina.timers.commands.newTimer"
         id="lumina.timers.menus.popup.newTimer">
      <visibleWhen>
         <and>
            <test
                  property="lumina.propertytesters.capability"
                  value="TIMER_EDIT_TREE">
            </test>
            <with
                  variable="selection">
               <iterate
                     ifEmpty="false"
                     operator="and">
                  <or>
                     <instanceof
                           value="lumina.base.model.Project">
                     </instanceof>
                     <instanceof
                           value="lumina.base.model.DeviceTimer">
                     </instanceof>
                  </or>
               </iterate>
               <count
                     value="1">
               </count>
            </with>
         </and>
      </visibleWhen>
   </command>
   <command
         commandId="lumina.timers.commands.newSchedule"
         id="lumina.timers.menus.popup.newSchedule">
      <visibleWhen>
         <and>
            <test
                  property="lumina.propertytesters.capability"
                  value="TIMER_EDIT_TREE">
            </test>
            <with
                  variable="selection">
               <iterate
                     ifEmpty="false"
                     operator="and">
                  <or>
                     <instanceof
                           value="lumina.base.model.DeviceTimer">
                     </instanceof>
                     <instanceof
                           value="lumina.base.model.Schedule">
                     </instanceof>
                  </or>
               </iterate>
               <count
                     value="1">
               </count>
            </with>
         </and>
      </visibleWhen>
   </command>
   <command
         commandId="lumina.timers.commands.newTask"
         id="lumina.timers.menus.popup.newTask">
      <visibleWhen>
         <and>
            <test
                  property="lumina.propertytesters.capability"
                  value="TIMER_EDIT_TREE">
            </test>
            <with
                  variable="selection">
               <iterate
                     ifEmpty="false"
                     operator="and">
                  <or>
                     <instanceof
                           value="lumina.base.model.Schedule">
                     </instanceof>
                     <instanceof
                           value="lumina.base.model.Task">
                     </instanceof>
                  </or>
               </iterate>
               <count
                     value="1">
               </count>
            </with>
         </and>
      </visibleWhen>
   </command>
   <separator
         name="s1"
         visible="true">
   </separator>
  <command
          commandId="org.eclipse.ui.edit.cut"
          id="lumina.timers.menus.popup.cut"
          label="%lumina.menus.cut.label"
          mnemonic="%lumina.menus.cut.mnemonic"
          tooltip="%lumina.menus.cut.tooltip">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="CLIPBOARD">
        </test>
     </visibleWhen>
  </command>
  <command
        commandId="org.eclipse.ui.edit.copy"
        id="lumina.timers.menus.popup.copy"
        label="%lumina.menus.copy.label"
        mnemonic="%lumina.menus.copy.mnemonic"
        tooltip="%lumina.menus.copy.tooltip">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="CLIPBOARD">
        </test>
     </visibleWhen>
  </command>
  <command
        commandId="org.eclipse.ui.edit.paste"
        id="lumina.timers.menus.popup.paste"
        label="%lumina.menus.paste.label"
        mnemonic="%lumina.menus.paste.mnemonic"
        tooltip="%lumina.menus.paste.label">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="CLIPBOARD">
        </test>
     </visibleWhen>
  </command>
  <command
        commandId="org.eclipse.ui.edit.delete"
        id="lumina.timers.menus.popup.delete"
        label="%lumina.menus.delete.label"
        mnemonic="%lumina.menus.delete.mnemonic"
        tooltip="%lumina.menus.delete.tooltip">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="CLIPBOARD">
        </test>
     </visibleWhen>
  </command>
  <separator
         name="s2"
         visible="true">
  </separator>
  <command
        commandId="lumina.commands.properties.rename"
        id="lumina.timers.menus.popup.rename"
        label="%lumina.menus.rename.label"
        mnemonic="%lumina.menus.rename.mnemonic"
        tooltip="%lumina.menus.rename.tooltip">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="ITEM_EDIT_NAME">
        </test>
     </visibleWhen>
  </command>
  <separator
        name="additions">
  </separator>
  <separator
        name="lumina.separator1"
        visible="true">
  </separator>
  <command
         commandId="lumina.timers.commands.executeTask"
         label="%lumina.menus.executeTask.label"
         mnemonic="%lumina.menus.executeTask.mnemonic"
         tooltip="%lumina.menus.executeTask.tooltip">
                 <visibleWhen>
               <with
                     variable="selection">
                  <iterate
                        ifEmpty="false"
                        operator="and">
                     <or>                        
                        <instanceof
                              value="lumina.base.model.Task">
                        </instanceof>
                     </or>
                  </iterate>
                  <count
                        value="1">
                  </count>
               </with>
            </visibleWhen>
   </command>
  <separator
        name="additions">
  </separator>
</menuContribution>
<menuContribution
      locationURI="popup:#lumina.views.blueprint.contextMenu">
      <command
         commandId="lumina.blueprint.commands.zoomIn"
         helpContextId="lumina.blueprint.commands.zoomIn"
         id="lumina.menus.zoomIn"
         label="%lumina.menus.zoomIn.label"
         mnemonic="%lumina.menus.zoomIn.mnemonic"
         tooltip="%lumina.menus.zoomIn.tooltip">
   </command>
   <command
         commandId="lumina.blueprint.commands.zoomOut"
         helpContextId="lumina.blueprint.commands.zoomOut"
         id="lumina.menus.zoomOut"
         label="%lumina.menus.zoomOut.label"
         mnemonic="%lumina.menus.zoomOut.mnemonic"
         tooltip="%lumina.menus.zoomOut.tooltip">
   </command>
   <command
         commandId="lumina.blueprint.commands.zoomToDefault"
         helpContextId="lumina.blueprint.commands.zoomToDefault"
         id="lumina.menus.zoomToDefault"
         label="%lumina.menus.zoomDefault.label"
         mnemonic="%lumina.menus.zoomDefault.mnemonic"
         tooltip="%lumina.menus.zoomDefault.tooltip">
   </command>
   <separator
         name="lumina.separator1"
         visible="true">
   </separator>
   <command
        commandId="lumina.blueprint.commands.maximize"
        helpContextId="lumina.blueprint.commands.maximize"
        id="lumina.menus.maximize"
        label="%lumina.menus.maximize.label"
        mnemonic="%lumina.menus.maximize.mnemonic"
        style="toggle"
        tooltip="%lumina.menus.maximize.tooltip">
     
   </command>
</menuContribution>    
<menuContribution
  locationURI="toolbar:org.eclipse.ui.main.toolbar">
<toolbar
    id="lumina.menus.toolbar.main.toolbar">
  <command
        commandId="lumina.commands.creation.newProject"
        label="%lumina.menus.newProject.label"
        mnemonic="%lumina.menus.newProject.mnemonic"
        tooltip="%lumina.menus.newProject.tooltip">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="PROJECT_NEW">
        </test>
     </visibleWhen>
  </command>
  <command
        commandId="lumina.commands.open.openProject"
        label="%lumina.menus.openProject.label"
        mnemonic="%lumina.menus.openProject.mnemonic"
        tooltip="%lumina.menus.openProject.tooltip">
  </command>
  <command
        commandId="lumina.commands.save.saveProject"
        label="%lumina.menus.saveProject.label"
        mnemonic="%lumina.menus.saveProject.mnemonic"
        tooltip="%lumina.menus.saveProject.tooltip">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="PROJECT_SAVE">
        </test>
     </visibleWhen>
  </command>
  <separator
        name="lumina.menus.toolbar.mainToolbar.separators.model"
        visible="true">
  </separator> 
</toolbar>
<toolbar
      id="lumina.menus.toolbar.edit">
   <command
         commandId="org.eclipse.ui.edit.undo"
         label="%lumina.menus.undo.label"
         mnemonic="%lumina.menus.undo.mnemonic"
         tooltip="%lumina.menus.undo.tooltip">
      <visibleWhen>
         <test
               property="lumina.propertytesters.capability"
               value="UNDO_REDO">
         </test>
      </visibleWhen>
   </command>
   <command
         commandId="org.eclipse.ui.edit.redo"
         label="%lumina.menus.redo.label"
         mnemonic="%lumina.menus.redo.mnemonic"
         tooltip="%lumina.menus.redo.tooltip">
      <visibleWhen>
         <test
               property="lumina.propertytesters.capability"
               value="UNDO_REDO">
         </test>
      </visibleWhen>
   </command>
   <separator
         name="lumina.menus.toolbar.editToolbar.separators.s1"
         visible="true">
   </separator>
   <command
         commandId="org.eclipse.ui.edit.cut"
         label="%lumina.menus.cut.label"
         mnemonic="%lumina.menus.cut.mnemonic"
         tooltip="%lumina.menus.cut.tooltip">
      <visibleWhen>
         <test
               property="lumina.propertytesters.capability"
               value="CLIPBOARD">
         </test>
      </visibleWhen>
   </command>
   <command
         commandId="org.eclipse.ui.edit.copy"
         label="%lumina.menus.copy.label"
         mnemonic="%lumina.menus.copy.mnemonic"
         tooltip="%lumina.menus.copy.tooltip">
      <visibleWhen>
         <test
               property="lumina.propertytesters.capability"
               value="CLIPBOARD">
         </test>
      </visibleWhen>
   </command>
   <command
         commandId="org.eclipse.ui.edit.paste"
         label="%lumina.menus.paste.label"
         mnemonic="%lumina.menus.paste.mnemonic"
         tooltip="%lumina.menus.paste.tooltip">
      <visibleWhen>
         <test
               property="lumina.propertytesters.capability"
               value="CLIPBOARD">
         </test>
      </visibleWhen>
   </command>
   <command
         commandId="org.eclipse.ui.edit.delete"
         id="lumina.menus.delete"
         label="%lumina.menus.delete.label"
         mnemonic="%lumina.menus.delete.mnemonic"
         tooltip="%lumina.menus.delete.tooltip">
      <visibleWhen>
         <test
               property="lumina.propertytesters.capability"
               value="CLIPBOARD">
         </test>
      </visibleWhen>
    </command>
</toolbar>
<toolbar
      id="lumina.menus.toolbar.modelItems">
       <command
             commandId="lumina.commands.creation.newFloor"
             icon="icons/actions/floor_new.png"
             label="%lumina.menus.newFloor.label"
             mnemonic="%lumina.menus.newFloor.mnemonic"
             tooltip="%lumina.menus.newFloor.tooltip">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="DEVICE_EDIT_TREE">
        </test>
     </visibleWhen>
  </command>
   <command
         commandId="lumina.commands.creation.newArea"
         icon="icons/actions/area_new.png"
         label="%lumina.menus.newArea.label"
         mnemonic="%lumina.menus.newArea.mnemonic"
         tooltip="%lumina.menus.newArea.tooltip">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="DEVICE_EDIT_TREE">
        </test>
     </visibleWhen>
  </command>
  <command
        commandId="lumina.commands.creation.newDevice"
        icon="icons/actions/device_new.png"
        id="lumina.menus.newDevice"
        label="%lumina.menus.newDevice.label"
        mnemonic="%lumina.menus.newDevice.mnemonic"
        style="pulldown"
        tooltip="%lumina.menus.newDevice.tooltip">
     <visibleWhen>
        <test
              property="lumina.propertytesters.capability"
              value="DEVICE_EDIT_TREE">
        </test>
     </visibleWhen>
  </command>
</toolbar>
<toolbar
      id="lumina.menus.toolbar.timers">
   <command
            commandId="lumina.timers.commands.newTimer"
            icon="icons/actions/timer_new.png"
            label="%lumina.menus.newTimer.label"
            mnemonic="%lumina.menus.newTimer.mnemonic"
            tooltip="%lumina.menus.newTimer.tooltip">
      <visibleWhen>
         <test
               property="lumina.propertytesters.capability"
               value="TIMER_EDIT_TREE">
         </test>
      </visibleWhen>
   </command>
   <command
         commandId="lumina.timers.commands.newSchedule"
         icon="icons/actions/schedule_new.png"
         label="%lumina.menus.newSchedule.label"
         mnemonic="%lumina.menus.newSchedule.mnemonic"
         tooltip="%lumina.menus.newSchedule.tooltip">
      <visibleWhen>
         <test
               property="lumina.propertytesters.capability"
               value="TIMER_EDIT_TREE">
         </test>
      </visibleWhen>
   </command>
   <command
         commandId="lumina.timers.commands.newTask"
         icon="icons/actions/task_new.png"
         label="%lumina.menus.newTask.label"
         mnemonic="%lumina.menus.newTask.mnemonic"
         tooltip="%lumina.menus.newTask.tooltip">
      <visibleWhen>
         <test
               property="lumina.propertytesters.capability"
               value="TIMER_EDIT_TREE">
         </test>
      </visibleWhen>
   </command>
   <separator
         name="lumina.menus.toolbar.timers.s1"
         visible="true">
   </separator>
   <command
         commandId="lumina.timers.commands.executeTask"
         icon="icons/actions/execute_task.png"
         label="%lumina.menus.executeTask.label"
         mnemonic="%lumina.menus.executeTask.mnemonic"
         tooltip="%lumina.menus.executeTask.tooltip">
         <visibleWhen>
         <test
               property="lumina.propertytesters.capability"
               value="TIMER_EXECUTE">
         </test>
      </visibleWhen>
   </command>
</toolbar>
<toolbar
      id="lumina.menus.toolbar.network">
   <command
         commandId="lumina.devices.commands.scanDevices"
         icon="icons/actions/refresh.png"
         label="%lumina.menus.executeScan.label"
         mnemonic="%lumina.menus.scanDevices.mnemonic"
         tooltip="%lumina.menus.executeScan.tooltip">
   </command>
   
</toolbar>
</menuContribution>
<menuContribution
      locationURI="toolbar:lumina.views.blueprint?after=additions">
   <separator
         name="lumina.views.blueprint.toolbar.separators.zoom"
         visible="true">
   </separator>   
   <command
         commandId="lumina.blueprint.commands.zoomIn"
         id="lumina.menus.zoomIn"
         label="%lumina.menus.zoomIn.label"
         mnemonic="%lumina.menus.zoomIn.mnemonic"
         tooltip="%lumina.menus.zoomIn.tooltip">
   </command>
   <command
         commandId="lumina.blueprint.commands.zoomOut"
         id="lumina.menus.zoomOut"
         label="%lumina.menus.zoomOut.label"
         mnemonic="%lumina.menus.zoomOut.mnemonic"
         tooltip="%lumina.menus.zoomOut.tooltip">
   </command>
   <command
         commandId="lumina.blueprint.commands.zoomToDefault"
         id="lumina.menus.zoomToDefault"
         label="%lumina.menus.zoomDefault.label"
         mnemonic="%lumina.menus.zoomDefault.mnemonic"
         tooltip="%lumina.menus.zoomDefault.tooltip">
   </command>   
 <!--
   <control
         class="lumina.views.blueprint.ZoomComboContribution"
         id="lumina.views.blueprint.contributions.zoomLevelCombo">
   </control>
  -->
</menuContribution>

<!--
  NOTE: We moved this into the code of the Navigation view to solve an Eclipse Bug
  <menuContribution
      locationURI="toolbar:lumina.views.navigation?after=additions">       
   <command
         commandId="lumina.views.commands.toggleInfo"
         id="lumina.menus.navigation.toggleInfo"
         label="%lumina.menus.toggleInfo.tooltip"
         style="toggle">
   </command   
   </menuContribution>
   --> 
   
   <!--
   NOTE: NOTE: We moved this into the code of the Timer view to solve an Eclipse Bug
   <menuContribution
   
      locationURI="toolbar:lumina.views.timer?after=additions">   
   <command
         commandId="lumina.views.commands.toggleInfo"
         id="lumina.menus.timer.toggleInfo"
         label="%lumina.menus.toggleInfo.tooltip"
         style="toggle">
   </command>
   </menuContribution>
   -->
   
<!--
 NOTE: NOTE: We moved this into the code of the Properties view to solve an Eclipse Bug
<menuContribution
      locationURI="toolbar:lumina.views.properties?after=additions">   
   <command
         commandId="lumina.properties.commands.toggleAlphaSort"
         id="lumina.menus.toggleAlphaSort"
         label="%lumina.menus.toggleAlphaSort.label"
         mnemonic="%lumina.menus.toggleAlphaSort.mnemonic"
         style="toggle"
         tooltip="%lumina.menus.toggleAlphaSort.tooltip">
   </command>
   </menuContribution>
 -->
   
</extension>
  
 <extension
     point="org.eclipse.ui.commandImages">
  <image
            commandId="lumina.commands.creation.newProject"
            icon="icons/actions/project_new.png"
            >
      </image>
      <image
            commandId="lumina.commands.creation.newFloor"
            hoverIcon="icons/actions/floor_new.png"
            icon="icons/actions/floor_new.png">
      </image>
       <image
            commandId="lumina.commands.creation.newArea"
            icon="icons/actions/area_new.png">
      </image>
      <image
             commandId="lumina.commands.creation.newDevice"
             icon="icons/actions/device_new.png">
       </image>
      <image
            commandId="lumina.timers.commands.newTimer"         
            icon="icons/actions/timer_new.png">
      </image>
      <image
            commandId="lumina.timers.commands.newSchedule"
            icon="icons/actions/schedule_new.png">
      </image>
      <image
            commandId="lumina.timers.commands.newTask"         
            icon="icons/actions/task_new.png">
      </image>
       <image
             commandId="lumina.commands.open.openProject"
             icon="icons/actions/open.png">
       </image>
       <image
             commandId="lumina.commands.properties.rename"
             icon="icons/actions/rename.png">
       </image>
       <image
             commandId="lumina.commands.save.saveProject"
             icon="icons/actions/save.png">
       </image>
       <image
             commandId="lumina.blueprint.commands.zoomIn"
             icon="icons/actions/zoom_in.png">
       </image>
       <image
             commandId="lumina.blueprint.commands.zoomOut"
             icon="icons/actions/zoom_out.png">
       </image>
       <image
             commandId="lumina.blueprint.commands.zoomToDefault"
             icon="icons/actions/zoom.png">
       </image>
        <image
             commandId="lumina.views.commands.toggleInfo"             
             icon="icons/actions/information.png">
       </image>
       <image
             commandId="lumina.properties.commands.toggleAlphaSort"
             disabledIcon="icons/actions/alpha_sort_disab.gif"
             icon="icons/actions/alpha_sort.gif">
       </image>
       <image
             commandId="lumina.timers.commands.executeTask"
             icon="icons/actions/execute_task.png">
       </image>
       <image
             commandId="lumina.devices.commands.scanDevices"
             icon="icons/actions/refresh.png">
       </image>              
</extension>

<extension
         id=""
         name=""
         point="org.eclipse.ui.handlers">
     <handler
         class="lumina.ui.actions.CreateProjectHandler"
         commandId="lumina.commands.creation.newProject">
     </handler>
   <handler
         class="lumina.ui.actions.CreateFloorHandler"
         commandId="lumina.commands.creation.newFloor">
      <activeWhen>
        <and>
        <with
               variable="selection">
            <iterate
                  ifEmpty="false"
                  operator="and">
               <or>
                  <instanceof
                        value="lumina.base.model.Project">
                  </instanceof>
                  <instanceof
                        value="lumina.base.model.Floor">
                  </instanceof>
               </or>
            </iterate>
            <count
                  value="1">
            </count>
         </with>
         <with variable="activePartId">
            <equals value="lumina.views.navigation"/>
         </with>
         </and>
      </activeWhen>
   </handler>
    <handler
         class="lumina.ui.actions.CreateAreaHandler"
         commandId="lumina.commands.creation.newArea">
      <activeWhen>
        <with
               variable="selection">
            <iterate
                  ifEmpty="false"
                  operator="and">
               <or>
                  <instanceof
                        value="lumina.base.model.Floor">
                  </instanceof>
                  <instanceof
                        value="lumina.base.model.Area">
                  </instanceof>
               </or>
            </iterate>
            <count
                  value="1">
            </count>
         </with>
      </activeWhen>
   </handler>
   <handler
         class="lumina.ui.actions.CreateDeviceHandler"
         commandId="lumina.commands.creation.newDevice">
      <activeWhen>
        <with
               variable="selection">
            <iterate
                  ifEmpty="false"
                  operator="and">
               <or>
                  <instanceof
                        value="lumina.base.model.Area">
                  </instanceof>
                  <instanceof
                        value="lumina.base.model.Device">
                  </instanceof>
               </or>
            </iterate>
            <count
                  value="1">
            </count>
         </with>
      </activeWhen>
   </handler>
   <handler
         class="lumina.ui.actions.CreateTimerHandler"
         commandId="lumina.timers.commands.newTimer">
      <activeWhen>
         <and>
         <with
               variable="selection">
            <iterate
                  ifEmpty="false"
                  operator="or">
               <or>
                  <instanceof
                        value="lumina.base.model.Project">
                  </instanceof>
                  <instanceof
                        value="lumina.base.model.DeviceTimer">
                  </instanceof>
               </or>
            </iterate>
         </with>
         <with variable="activePartId">
            <equals value="lumina.views.timer"/>
         </with>
         </and>
       </activeWhen>
   </handler>
   <handler
         class="lumina.ui.actions.CreateScheduleHandler"
         commandId="lumina.timers.commands.newSchedule">
      <activeWhen>
       <with
               variable="selection">
            <iterate
                  ifEmpty="false"
                  operator="or">
               <or>
                  <instanceof
                        value="lumina.base.model.DeviceTimer">
                  </instanceof>
                  <instanceof
                        value="lumina.base.model.Schedule">
                  </instanceof>
               </or>
            </iterate>
         </with>
      </activeWhen>
   </handler>
   <handler
         class="lumina.ui.actions.CreateTaskHandler"
         commandId="lumina.timers.commands.newTask">
      <activeWhen>
      <with
               variable="selection">
            <iterate
                  ifEmpty="false"
                  operator="or">
               <or>
                  <instanceof
                        value="lumina.base.model.Schedule">
                  </instanceof>
                  <instanceof
                        value="lumina.base.model.Task">
                  </instanceof>
               </or>
            </iterate>
         </with>
      </activeWhen>
   </handler>
   

   <handler
         class="lumina.ui.actions.CutItemsToClipboardHandler"
         commandId="org.eclipse.ui.edit.cut">
      <activeWhen>
      <with variable="selection">                     
          <test property="lumina.propertytesters.canCutItems"></test>      
         </with>
      </activeWhen>
   </handler>

   
    <handler
         class="lumina.ui.actions.CopyItemsToClipboardHandler"
         commandId="org.eclipse.ui.edit.copy">
      <activeWhen>
      <with variable="selection">                     
          <test property="lumina.propertytesters.canCopyItems"></test>      
         </with>
      </activeWhen>
   </handler>
   <handler
         class="lumina.ui.actions.PasteItemsFromClipboardHandler"
         commandId="org.eclipse.ui.edit.paste">
      <activeWhen>
      <with variable="selection">                     
          <test property="lumina.propertytesters.canPasteItems"></test>      
         </with>
      </activeWhen>
   </handler>
   <handler
         class="lumina.ui.views.blueprint.actions.AddToBluePrintHandler"
         commandId="lumina.blueprint.commands.addToBlueprint">
      <activeWhen>
      <with variable="selection">     
           <test property="lumina.blueprint.propertytesters.canAddToPlan"></test>           
         </with>
      </activeWhen>
   </handler>
   <handler
         class="lumina.ui.views.blueprint.actions.RemoveFromBluePrintHandler"
         commandId="lumina.blueprint.commands.removeFromBlueprint">
      <activeWhen>
      <with variable="selection">
           <test property="lumina.blueprint.propertytesters.canRemoveFromPlan"></test> 
         </with>
      </activeWhen>
   </handler>
   <handler
         class="lumina.ui.views.blueprint.actions.CenterInBluePrintHandler"
         commandId="lumina.blueprint.commands.centerInBlueprint">
      <activeWhen>
      <with variable="selection">
           <test property="lumina.blueprint.propertytesters.canCenterInPlan"></test> 
         </with>
      </activeWhen>
   </handler>
   <handler
         class="lumina.ui.views.control.actions.ShowDeviceControlHandler"
         commandId="lumina.control.commands.showDeviceControl">
      <activeWhen>
      <with variable="selection">
           <test property="lumina.control.propertytesters.canShowDeviceControl"></test> 
         </with>
      </activeWhen>
   </handler>
   <handler
         class="lumina.ui.views.blueprint.actions.ZoomInHandler"
         commandId="lumina.blueprint.commands.zoomIn">
      <activeWhen>
      <with variable="selection">
           <test property="lumina.blueprint.propertytesters.canZoomIn"></test> 
         </with>
      </activeWhen>
   </handler>
   <handler
         class="lumina.ui.views.blueprint.actions.ZoomOutHandler"
         commandId="lumina.blueprint.commands.zoomOut">
      <activeWhen>
      <with variable="selection">
           <test property="lumina.blueprint.propertytesters.canZoomOut"></test> 
         </with>
      </activeWhen>
   </handler>
   <handler
         class="lumina.ui.views.blueprint.actions.ZoomToDefaultHandler"
         commandId="lumina.blueprint.commands.zoomToDefault">
      <activeWhen>
      <with variable="selection">
           <test property="lumina.blueprint.propertytesters.canZoomToDefault"></test> 
         </with>
      </activeWhen>
   </handler>
   <handler
         class="lumina.ui.actions.ScanDevicesHandler"
         commandId="lumina.devices.commands.scanDevices">
        <activeWhen>
        <with variable="selection">
           <test property="lumina.propertytesters.canScanDevices"></test> 
         </with>
      </activeWhen>
   </handler>
   <handler
         class="lumina.ui.actions.ExecuteTaskHandler"
         commandId="lumina.timers.commands.executeTask">
      <activeWhen>
      <with
               variable="selection">
            <iterate
                  ifEmpty="false"
                  operator="and">
               <or>
                  <instanceof
                        value="lumina.base.model.Task">
                  </instanceof>
               </or>
            </iterate>
            <count
                  value="1">
            </count>
         </with>
      </activeWhen>
   </handler>
</extension>
   <extension
         id="application"
         point="org.eclipse.core.runtime.applications">
      <application>
         <run
               class="lumina.Application">
         </run>
      </application>
   </extension>


<!--
<extension
      point="org.eclipse.ui.intro">
   <intro
         class="org.eclipse.ui.intro.config.CustomizableIntroPart"
         id="Lumina.intro"
         icon="icons/application/icangraph-16-transparent.png">
   </intro>
   <introProductBinding
         introId="Lumina.intro"
         productId="lumina.application.icangraph">
   </introProductBinding>   
</extension>
-->

<!--
<extension
      point="org.eclipse.ui.intro.config">
   <config
         content="$nl$/introContent.xml"
         id="Lumina.introConfigId"
         introId="Lumina.intro">
      <presentation
            home-page-id="homePageId">
         <implementation
               kind="html"
               os="win32,linux,macosx"
               style="static/css/shared.css">
         </implementation>
      </presentation>
   </config>
</extension>
-->

<!--
   <extension point="org.eclipse.ui.intro.configExtension">
   	  <action
            name="closeWelcome"
            replaces="runAction?pluginId=Lumina&amp;class=lumina.ui.actions.CloseWelcomeActionDelegate">            
      </action>  
      <action
            name="openProject"
            replaces="runAction?pluginId=Lumina&amp;class=lumina.ui.actions.OpenProjectActionDelegate">            
      </action>
      <action
            name="newProject"
            replaces="runAction?pluginId=Lumina&amp;class=lumina.ui.actions.CloseWelcomeActionDelegate">            
      </action>
      <action
            name="readDocumentation"
            replaces="runAction?pluginId=Lumina&amp;class=lumina.ui.actions.HelpActionHandler">            
      </action>
   </extension>
   -->
   <extension
         point="org.eclipse.core.expressions.propertyTesters">
    <propertyTester
          class="lumina.ui.propertytesters.CapabilityPropertyTester"
          id="lumina.propertytesters.CapabilityPropertyTester"
          namespace="lumina.propertytesters"
          properties="capability"
          type="java.lang.Object">
    </propertyTester>    
    <propertyTester
      id="lumina.propertytesters.ProjectHasChangesPropertyTester"
      type="java.lang.Object"
      namespace="lumina.propertytesters"
      properties="projectHasChanges"
      class="lumina.ui.propertytesters.ProjectHasChangesPropertyTester">
    </propertyTester>
    <propertyTester
      id="lumina.propertytesters.CanScanDevicesPropertyTester"
      type="java.lang.Object"
      namespace="lumina.propertytesters"
      properties="canScanDevices"
      class="lumina.ui.propertytesters.CanScanDevicesPropertyTester">
    </propertyTester>
    <propertyTester
      id="lumina.propertytesters.CanCutItemsPropertyTester"
      type="java.lang.Object"
      namespace="lumina.propertytesters"
      properties="canCutItems"
      class="lumina.ui.propertytesters.CanCutItemsPropertyTester">
    </propertyTester>
    <propertyTester
      id="lumina.propertytesters.CanCopyItemsPropertyTester"
      type="java.lang.Object"
      namespace="lumina.propertytesters"
      properties="canCopyItems"
      class="lumina.ui.propertytesters.CanCopyItemsPropertyTester">
    </propertyTester>
    <propertyTester
      id="lumina.propertytesters.CanPasteItemsPropertyTester"
      type="java.lang.Object"
      namespace="lumina.propertytesters"
      properties="canPasteItems"
      class="lumina.ui.propertytesters.CanPasteItemsPropertyTester">
    </propertyTester>
    <propertyTester
      id="lumina.control.propertytesters.CanShowDeviceControlPropertyTester"
      type="java.lang.Object"
      namespace="lumina.control.propertytesters"
      properties="canShowDeviceControl"
      class="lumina.ui.views.control.propertytesters.CanShowDeviceControlPropertyTester">
    </propertyTester>
     <propertyTester
      id="lumina.blueprint.propertytesters.CanAddToPlanPropertyTester"
      type="java.lang.Object"
      namespace="lumina.blueprint.propertytesters"
      properties="canAddToPlan"
      class="lumina.ui.views.blueprint.propertytesters.CanAddToPlanPropertyTester">
    </propertyTester>
     <propertyTester
      id="lumina.blueprint.propertytesters.CanRemoveFromPlanPropertyTester"
      type="java.lang.Object"
      namespace="lumina.blueprint.propertytesters"
      properties="canRemoveFromPlan"
      class="lumina.ui.views.blueprint.propertytesters.CanRemoveFromPlanPropertyTester">
    </propertyTester>
    <propertyTester
      id="lumina.blueprint.propertytesters.CanCenterInPlanPropertyTester"
      type="java.lang.Object"
      namespace="lumina.blueprint.propertytesters"
      properties="canCenterInPlan"
      class="lumina.ui.views.blueprint.propertytesters.CanCenterInPlanPropertyTester">
    </propertyTester>
    <propertyTester
      id="lumina.blueprint.propertytesters.CanZoomInPropertyTester"
      type="java.lang.Object"
      namespace="lumina.blueprint.propertytesters"
      properties="canZoomIn"
      class="lumina.ui.views.blueprint.propertytesters.CanZoomInPropertyTester">
    </propertyTester>
    <propertyTester
      id="lumina.blueprint.propertytesters.CanZoomOutPropertyTester"
      type="java.lang.Object"
      namespace="lumina.blueprint.propertytesters"
      properties="canZoomOut"
      class="lumina.ui.views.blueprint.propertytesters.CanZoomOutPropertyTester">
    </propertyTester>
    <propertyTester
      id="lumina.blueprint.propertytesters.CanZoomToDefaultPropertyTester"
      type="java.lang.Object"
      namespace="lumina.blueprint.propertytesters"
      properties="canZoomToDefault"
      class="lumina.ui.views.blueprint.propertytesters.CanZoomToDefaultPropertyTester">
    </propertyTester>
   </extension>
   <extension
         id="icangraph"
         point="org.eclipse.core.runtime.products">
      <product
            application="lumina.application.application"
            name="iCanGraph">
         <property
               name="windowImages"
               value="icons/application/icangraph-16-transparent.gif,icons/application/icangraph-32-transparent.gif,icons/application/icangraph-48-transparent.gif,icons/application/icangraph-64-transparent.gif,icons/application/icangraph-128-transparent.gif">
         </property>
         <property
               name="aboutText"
               value="%lumina.about.text">
         </property>
         <property
               name="aboutImage"
               value="icons/application/product_lg.gif">
         </property>
      </product>
   </extension>
   <extension
         id="S3CProd"
         point="org.eclipse.core.runtime.products">
      <product
            application="lumina.application.application"
            name="SCube">
         <property
               name="windowImages"
               value="icons/application/icangraph-16-transparent.gif,icons/application/icangraph-32-transparent.gif,icons/application/icangraph-48-transparent.gif,icons/application/icangraph-64-transparent.gif,icons/application/icangraph-128-transparent.gif">
         </property>
         <property
               name="aboutText"
               value="%lumina.about.text">
         </property>
         <property
               name="aboutImage"
               value="/lumina.products.scube/icons/application/scube.png">
         </property>
      </product>
   </extension>
</plugin>
